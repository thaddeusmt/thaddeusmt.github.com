<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Apache | Chili Pepper Design]]></title>
  <link href="http://thaddeusmt.github.com/blog/categories/apache/atom.xml" rel="self"/>
  <link href="http://thaddeusmt.github.com/"/>
  <updated>2013-01-03T14:41:18-06:00</updated>
  <id>http://thaddeusmt.github.com/</id>
  <author>
    <name><![CDATA[Evan Johnson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[htaccess 301 Redirects from one URL query string to another]]></title>
    <link href="http://thaddeusmt.github.com/2009/02/01/htaccess-query-string-301s/"/>
    <updated>2009-02-01T13:14:00-06:00</updated>
    <id>http://thaddeusmt.github.com/2009/02/01/htaccess-query-string-301s</id>
    <content type="html"><![CDATA[<p>The other day I was trying to set up a "301 Moved Permanently":http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3 redirect that took one dynamic url and redirected to <em>another</em> dynamic url.</p>

<p>Searching around I found "plenty":http://www.seobook.com/archives/001714.shtml of "tips":http://www.webproworld.com/discussion-forum/73178-how-do-you-301-redirect-dynamic-url-url-question-mark.html on how to redirect from older "ugly" style dynamic urls like "test.php?id=999" to new "clean" dynamic urls like "test/999", but that wasn't exactly what I needed. I needed to go from something like "page.php?id=999" to something like"page.php?id=111". Basically just a parameter substitution.</p>

<p>There are two ways to do 301s in an .htaccess file. One is to do a standard "redirect 301", and the other is to use the Apache <em>mod_rewrite</em> module. For reference, this is what a standard "redirect 301" looks like:</p>

<pre><code>redirect 301 /testpage.htm http://www.example.com/testpage2.php
</code></pre>


<p>This won't work with a dynamic URL like "/testpage.htm?id=blah" though. To handle query strings properly you need to use <em>mod_rewrite</em>. Here is the code that ended up working:</p>

<pre><code># redirect testpage.php?id=string1 to testpage.php?id=string2
RewriteCond %{QUERY_STRING} ^id=string1$ [NC]
RewriteRule testpage http://www.example.com/testpage.php\?id=string2 [L,R=301]
</code></pre>


<p><em>The trick is that the second part of the RewriteRule - the URL to redirect to - is evaluated as a Regular Expression but <em>has a "?" in it</em>. This is a RegEx operator, and will break the command unless it is escaped with a "\".</em></p>

<p>Look close at our destination URL "http://www.example.com/testpage.php<span style="color:#f00; font-weight: bold;">\?</span>id=string2". The URL we actually want to redirect to is "http://www.example.com/testpage.php<span style="color:#f00; font-weight: bold;">?</span>id=string2". Forgetting this one tiny little escape character will blow the whole thing up. :)</p>

<p><em>The dirty details:</em></p>

<p>There are plenty of good resources on mod_rewrite conditionals if you want to learn more, but it basically works like this: Apache looks at the RewriteRule, which is a pair of two Regular Expressions (RegEx): the URL we want to change, and what we want to change it to. If mod_rewrite matches the first RegEx expression then it looks at the RewriteCond to see if it should apply the RewriteRule. In this case we are just looking at the QUERY_STRING (everything after the "?"), and doing a case-insensitive [NC] match for "id=string1". If the RewriteCond is true, then the RewriteRule goes in to effect and "testpage" is redirected to "http://www.example.com/testpage.php\?id=string2". Just don't forget to escape that pesky "?" in the query string!</p>

<p>301 Redirects are an important part of SEO and maintaining search engine rankings, so it's nice to have another trick up your sleeve like this.</p>

<p>Here are some very helpful additional resources to improve your htaccess mod_rewrite-fu:</p>

<ul>
<li>"Basic Guide":http://check-these.info/mod_rewrite-basic.html</li>
<li>"Cheat Sheet":http://www.askapache.com/htaccess/mod_rewrite-variables-cheatsheet.html</li>
<li>"Official Guide":http://askapache.info/trunk/misc/rewriteguide.html</li>
</ul>

]]></content>
  </entry>
  
</feed>
